{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @private\n * @param {string | string[]} fontFace\n * @param {string} fontStyle\n * @param {number} fontSize\n * @param {number} precision\n * @param {string} defaultFontFace\n * @returns {string}\n */\nexport function getFontSetting(fontFace, fontStyle, fontSize, precision, defaultFontFace) {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Splits a string into an array of spaces and words.\n *\n * @remarks\n * This method always returns an array with an even length.\n *\n * - The **even indices** are the group of spaces that occur before the word at the\n *   next (odd) index.\n * - The **odd indices** are the words.\n *\n * If the string does not begin with a space, the first element of the array will\n * be an empty string (\"\").\n *\n * @param {string} text\n * @returns\n */\nexport function splitWords(text) {\n    const regexp = /([ \\u200B]+)?([^ \\u200B]+)/g;\n    const arr = [];\n    let match;\n    while ((match = regexp.exec(text)) !== null) {\n        arr.push(match[1] || '');\n        arr.push(match[2]);\n    }\n    return arr;\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isZeroWidthSpace(space) {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isSpace(space) {\n    return isZeroWidthSpace(space) || space === ' ';\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isZeroWidthSpace, splitWords } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            let words = splitWords(lines[i]);\n            for (let j = 0; j < words.length; j += 2) {\n                const space = words[j];\n                const word = words[j + 1];\n                const wordWidth = this.measureText(word, letterSpacing);\n                const spaceWidth = isZeroWidthSpace(space) ? 0 : this.measureText(space, letterSpacing);\n                const wordWidthWithSpace = wordWidth + spaceWidth;\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += word;\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += space + word;\n                }\n            }\n\n            resultLines.push(result);\n            result = '';\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace')\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n\n    tokenize(text) {\n        const re =/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g\n\n        const delimeters = text.match(re) || [];\n        const words = text.split(re) || [];\n\n        let final = [];\n        for (let i = 0; i < words.length; i++) {\n            final.push(words[i], delimeters[i])\n        }\n        final.pop()\n        return final.filter((word) => word != '');\n\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while(n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true; \n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                child._handleClick(target);\n                break;\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a,b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1: -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n"],"names":["StageUtils","static","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils$1","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","direction","f","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","patch","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","_getCrossAxisLayoutSize","resizeAxis","_getMainAxisPadding","_getMainAxisMargin","getTotalMargin","getMarginOffset","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","hasAlpha","loadError","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","isResultTexture","forEachEnabledElement","cb","texture","elements","hasEnabledElements","forEachActiveElement","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","nativeTexture","clearNativeTexture","replaceNativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","renderTextureReused","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","offsetY","_disableFuncY","disableFuncW","disableFuncH","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","displayedTextureSource","setDisplayedTextureSource","textureSource","isRoot","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","_setShaderOwnerChildrenRecursive","_hasRenderContext","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","outOfBounds","boundsMargin","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","setTexturizer","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","l","map","removeListener","emit","listenerCount","removeAllListeners","object","addAsMixin","cls","Shader","coreContext","_initialized","_elements","renderer","createShader","isShader","isValidShaderType","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","ph","isAutosizeTexture","isTexture","ImageTexture","super","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","splitWords","text","regexp","match","exec","isZeroWidthSpace","space","isSpace","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","textBaseline","_load","document","fonts","fontSetting","check","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","reduce","acc","char","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","spl","alignLine","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","re","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","o","applyFontStyle","parsed","_getBreakIndex","breakIndex","totalWidth","initialX","prevWidth","prevX","TextTexture","advancedRenderer","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","isBoolean","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","get","first","last","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","_addTag","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","renderWidth","renderHeight","finalX","finalY","finalW","finalH","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","tempty","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","_getByTag","setToArray","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","tagRoot","sel","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","getLocationString","localTags","getSettings","getPrettyString","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","collision","_collision","colorTop","colorBottom","colorLeft","colorRight","_allowChildrenAccess","hasChildren","rect","rectangleTexture","enableTextTexture","isString","forceUpdate","create","rtt","rttLazy","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","transitions","smooth","setSmooth","fastForward","_transitions","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","toLowerCase","isColorProperty","mergeColors","mergeNumbers","toJSON","tree","collectChildren","getProperties","properties","props","key","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","fire","event","_hasMethod","_getState","_state","__path","_inState","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","__supportsSpread","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__propertyBinding","__func","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__obj","__prop","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","isNumber","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","cparent","seekAncestorByType","getSharedAncestorComponent","ancestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_doFireAncestors","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","getElementHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","glProgram","compiled","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","initialized","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","getWebGL","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","cloneObjShallow","bytesPerPixel","mca","mergeColorAlpha","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","lp","renderFrame","requestAnimationFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","getTimingFunction","timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","rv","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","getRgbaComponentsNormalized","usedVramAlpha","usedVramNonAlpha","usedVram","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusPath","focusTopDownEvent","events","focusBottomUpEvent","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","ch","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","canvasFactory","radius","strokeWidth","strokeColor","fillColor","getCanvasTexture","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","_paddingX","_paddingY","_multiSpline","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","getSpline","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","blend","topLeft","num","topRight","bottomRight","bottomLeft","_sc","renderPrecision","FadeOutShader","_fade","right","bottom","left","fade","VignetteShader","_magnitude","_intensity","_pivot","intensity","magnitude","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","period","angle","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","radiusX","radiusY","_radiusY","innerColor","outerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","PerspectiveShader","MagnifierShader","_magnification","magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","showDot","bool","clockwise","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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"}